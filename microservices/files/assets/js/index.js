import 'dropzone/dist/dropzone.css';
import '../scss/index.scss'

import {
  Upload
} from '../../libs/FRTcloud/src/assets/js/dropzone.js'

(() => {
  'use strict';

  const lang = {
    ru: {
      dropzone: '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å –∏ –æ—Ç–ø—É—Å—Ç–∏—Ç–µ, –∏–ª–∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –Ω–µ–π –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.',
      message: {
        error: {
          title: '–í–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.',
          success: '–°–µ—Ä–≤–µ—Ä –Ω–µ —Å–º–æ–≥ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        },
        success: {
          title: '',
          done: '–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.'
        },
        limit: {
          title: '!!!!',
          body: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.'
        },
        delete: {
          title: '',
          body: '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.'
        }
      },
      error: {
        delete: {
          title: '',
          body: '–í–æ –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.'
        }
      }
    }
  }

  const message = lang.ru.message
  const position = 'topCenter'
  let maxfilesexceeded = false
  let doc = document

  // üë£ üìΩ üéû ‚ùóÔ∏è ¬© ‚Ñ¢ üíØ üí´ üí• ‚òëÔ∏è ‚úîÔ∏è ‚ÅâÔ∏è ‚ÄºÔ∏è

  doc.addEventListener('DOMContentLoaded', async () => {
    let files
    let folder
    /** ul files */
    let clickFiles = doc.querySelector('#files')

    const csrf = () => doc.querySelector('meta[name=csrf-token]').getAttributeNode('content').value

    /** Dropzone add */
    const dropzoneAdd = doc.querySelector('.files-panel-container-add')
    /** Icon add new file and folder */
    const addFilesAndFolder = doc.getElementById('icon-add')
    addFilesAndFolder.addEventListener('click', function (e) {
      let target = e.target;
      let that = this
      // –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–ª–∏ –ø–∞–ø–∫–∏
      let children = that.children[1]
      // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–ª–∏ –ø–∞–ø–∫–∏
      children.classList.toggle('display-view')
      if (target.classList[0] === 'add-files-text') {
        dropzoneAdd.classList.add('display-view')
      }

    })

    /** –ü–∞–ø–∫–∏ */
    // _$.delegate('#folders', 'div', 'click', function (e) {
    //   console.log(e.delegateTarget);
    // }, false);



    /** –§–∞–π–ª—ã */
    // _$.tippy('.menu-outline', {
    //   content: '<strong>Bolded content</strong>',
    //   allowHTML: true,
    //   trigger: 'click',
    // });

    /** 
     * 
     */
    clickFiles.addEventListener('click', (e) => {
      let target = e.target
      let parent = target.offsetParent
      if (parent) { // if parent exists and is not a click menu svg 
        let classList = parent.classList[0]
        // –µ—Å–ª–∏ –∫–ª–∏–∫ –ø—Ä–æ–∏–∑–æ—à—ë–ª –Ω–µ –Ω–∞ –º–µ–Ω—é —Ñ–∞–π–ª–∞, –≤—ã–¥–µ–ª—è–µ–º li –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª
        if (classList !== 'files-panel-item-menu__icon' && classList !== 'files-panel-item-menu') {
          parent.classList.toggle('files-click')
        }
      }
    })

    /** 
     ** –ú–µ–Ω—é —Ñ–∞–π–ª–∞. 
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ñ–∞–π–ª–∞.
     */
    _$.delegate('ul', '.menu-outline', 'click', (e) => {
      let target = e.target
      let parentNode = target.parentNode
      let children = parentNode.children[1]
      children.classList.toggle('display-view')
    })


    _$.delegate('ul', 'span', 'click', (e) => {
      let target = e.target
      let parent = target.offsetParent
      let data
      let id

      if (parent) {
        data = target.dataset
        id = target.id
        switch (id) {
          case 'menu-file-rename': {
            fileRename(data)
            break;
          }
          case 'menu-file-delete': {
            deleteFile(data)
            break;
          }
          case 'menu-file-settings': {
            settings(data)
            break;
          }
          default: {
            break
          }
        }
      }
    })

    console.log('‚ö° user', user)
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
     */
    let uploadFile = Upload({
      url: '/files/upload/misha',
      acceptedFiles: 'image/*',
      lang
    }).on('success', function (file, response) {
      // –ï—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω —É–¥–∞–ª–∏–º –ø—Ä–µ–≤—å—é –∏–∑ Dropzone
      if (response.status === 201) {
        clickFiles.insertAdjacentHTML('afterbegin', response.file)
        uploadFile.removeFile(file)
      }
    })


    function fileRename(data) {

    }


    function deleteFile(data) {
      try {
        let element
        let name = data.name

        _$.fetch('/files/delete/misha', {
          method: 'delete',
          body: {
            files: [data.path],
            fields: {
              csrf: csrf()
            }
          }
        }).then(done => {
          if (done.status === 200) {
            _$.message('success', {
              title: message.delete.title,
              message: message.delete.body,
              position: position
            })
            element = doc.getElementById(name)
            element.classList.add('fadeOutUp')
            setTimeout(() => {
              element.remove()
            }, 600)
          } else {
            new Error(lang.ru.error.delete.body)
          }
        }).catch(error => error)
      } catch (err) {
        console.log('‚ö° err::deleteFile', err)
      }

    }

    function settings(data) {

    }



    // _$.delegate('#files', 'li', 'mouseover', function (e) {
    //   // console.log('‚ö° e', e)
    //   let target = e.target
    //   console.log('‚ùóÔ∏è target', target)
    // })

    /** –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ñ–∞–π–ª–∞ */
    // clickFiles.onmouseover = function (e) {
    // let target = e.target
    // let localName = target.localName
    // if (localName === 'figure') {
    //   console.log('-----------------------------------------')
    //   console.log('‚ùóÔ∏è target', target)
    //   console.log('‚ö° localName', localName)
    //   let parentElement = target.parentElement
    //   let firstElementChild = target.firstElementChild
    //   console.log('‚ö° parentElement', parentElement)
    //   console.log('üí• firstElementChild', firstElementChild)
    // }
    //   menuFilesView(e)
    // }

    // /** –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —Ñ–∞–π–ª–∞ */
    // clickFiles.onmouseout = function (e) {
    // let target = e.target
    // console.log('üë£ target', target)
    //   menuFilesView(e)
    // }



    // function menuFilesView(e) {
    //   let target = e.target
    //   console.log('‚ö° e.type', e.type)
    //   let type = e.type
    //   let localName = target.localName
    //   console.log('‚ùóÔ∏è target', target)
    //   if (localName === 'figure') {
    //     // console.log('-----------------------------------------')

    //     // console.log('‚ö° localName', localName)
    //     let parentElement = target.parentElement
    //     let firstElementChild = target.firstElementChild
    //     if (type === "mouseover") firstElementChild.classList.add('display-view')
    //     if (type === "mouseout") firstElementChild.classList.remove('display-view')

    //   }
    // }


  }) // DOMContentLoaded

})()